{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","successMessage","errorMessage","className","Filter","termToFilter","handleFilterChange","value","onChange","PersonForm","name","number","nameHandler","numberHandler","formSubmition","onSubmit","type","Persons","personsToShow","deleteHandler","map","person","onClick","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setTermToFilter","setSuccessMessage","setErrorMessage","useEffect","personsService","initialPersons","catch","error","filter","toLowerCase","includes","createPerson","returnedPerson","concat","setTimeout","updatePerson","window","confirm","personObject","updatedIndex","findIndex","personToCheck","updatedArray","event","target","preventDefault","find","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41bad7ef.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nconst putPerson = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, createPerson, deletePerson, putPerson }","import React, { useState, useEffect } from \"react\";\nimport personsService from \"./services/persons\";\nimport \"./App.css\";\n\nconst Notification = ({ successMessage, errorMessage }) => {\n  if (successMessage === null && errorMessage === null) return null;\n  return (\n    <div>\n      {(successMessage !== null && (\n        <div className=\"success\">{successMessage}</div>\n      )) ||\n        (errorMessage !== null && <div className=\"error\">{errorMessage}</div>)}\n    </div>\n  );\n};\n\nconst Filter = ({ termToFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter with <input value={termToFilter} onChange={handleFilterChange} />\n    </div>\n  );\n};\nconst PersonForm = ({\n  name,\n  number,\n  nameHandler,\n  numberHandler,\n  formSubmition,\n}) => {\n  return (\n    <form onSubmit={formSubmition}>\n      <div>\n        {\" \"}\n        name: <input value={name} onChange={nameHandler} />{\" \"}\n      </div>\n      <div>\n        number: <input value={number} onChange={numberHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\nconst Persons = ({ personsToShow, deleteHandler }) => {\n  return personsToShow.map((person) => (\n    <div key={person.name}>\n      {person.name} {person.number}\n      <button onClick={() => deleteHandler(person)}>delete</button>\n    </div>\n  ));\n};\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [termToFilter, setTermToFilter] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const hook = () => {\n    personsService\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons);\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(hook, []);\n\n  const personsToShow = termToFilter\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(termToFilter.toLowerCase())\n      )\n    : persons;\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const person = persons.find((person) => person.name === newName);\n    person ? updatePerson(person) : createPerson();\n  };\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n  const handleFilterChange = (event) => setTermToFilter(event.target.value);\n  const deletePerson = (person) => {\n    if (\n      window.confirm(\n        `Are you sure that you want to delete ${person.name} number?`\n      )\n    ) {\n      personsService\n        .deletePerson(person.id)\n        .then(() => {\n          setPersons(\n            persons.filter((personToCheck) => personToCheck.id !== person.id)\n          );\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n        });\n    }\n  };\n  const createPerson = () => {\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    personsService\n      .createPerson(personObject)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setSuccessMessage(\"Added \" + returnedPerson.name);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setErrorMessage(error.response.data.error);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n  const updatePerson = (person) => {\n    if (\n      window.confirm(\n        `Are you sure that you want to replace old number of ${person.name}, with a new one ?`\n      )\n    ) {\n      const personObject = {\n        id: person.id,\n        name: person.name,\n        number: newNumber,\n      };\n      personsService\n        .putPerson(person.id, personObject)\n        .then((returnedPerson) => {\n          const updatedIndex = persons.findIndex(\n            (personToCheck) => personToCheck.id === person.id\n          );\n          let updatedArray = [...persons];\n          updatedArray[updatedIndex] = returnedPerson;\n          setPersons(updatedArray);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          //console.log(error.response.data.error);\n          setErrorMessage(error.response.data.error);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        successMessage={successMessage}\n        errorMessage={errorMessage}\n      />\n      <Filter\n        termToFilter={termToFilter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        formSubmition={addPerson}\n        nameHandler={handleNameChange}\n        numberHandler={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deleteHandler={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}